
#ifndef __OCARINA_GENERATED_DEPLOYMENT_H_
#define __OCARINA_GENERATED_DEPLOYMENT_H_
#include <core/schedvalues.h>
/**************************************************** */

/*  This file was automatically generated by Ocarina  */

/*  Working Copy from r563ae649 */

/*  Do NOT hand-modify this file, as your             */

/*  changes will be lost when you re-run Ocarina      */

/**************************************************** */

#define POK_NEEDS_CONSOLE 1

// Seems not used
// #define POK_CONFIG_LOCAL_NODE 0

// #define POK_GENERATED_CODE 1

/*  The POK_LOCAL_NODE macro corresponds to the identifier for this node in  */
/*  the distributed system. This identifier is unique for each nodeIn this  */
/*  case, this identifier was deduced from thecpu processor component. */

#define POK_NEEDS_THREADS 1

#define POK_NEEDS_PARTITIONS 1

#define POK_NEEDS_SCHED 1

/*  #define POK_NEEDS_DEBUG 1 */

/*  If you want to activate DEBUG mode, uncomment previous line */

#define POK_CONFIG_NB_PARTITIONS 1

#define POK_CONFIG_NB_PROCESSORS 1

/*  The maccro POK_CONFIG_NB_PARTITIONS indicates the amount of partitions in */
/*   the current system.It corresponds to the amount of process componentsin  */
/*  the system. */

#define POK_CONFIG_NB_THREADS 6

/*  The maccro POK_CONFIG_NB_THREADS indicates the amount of threads used in  */
/*  the kernel.It comprises the tasks for the partition and the main task of  */
/*  each partition that initialize all ressources. */

#define POK_CONFIG_PARTITIONS_NTHREADS                                         \
  { 4 }

/*  The maccro POK_CONFIG_NB_PARTITIONS_NTHREADS indicates the amount of  */
/*  threads in each partition we also add an additional process that  */
/*  initialize all partition's entities (communication, threads, ...) */

/* Specify Schduler */
/* Uncomment to use */
/* FP */
/* #define POK_NEEDS_SCHED_FP 1 */
/* #define POK_CONFIG_PARTITIONS_SCHEDULER {POK_SCHED_FP} */

/* EDF */
/* #define POK_NEEDS_SCHED_EDF 1 */
/* #define POK_CONFIG_PARTITIONS_SCHEDULER {POK_SCHED_EDF} */

/* WRR */
/* #define POK_NEEDS_SCHED_WRR 1
#define POK_CONFIG_PARTITIONS_SCHEDULER                                        \
{ POK_SCHED_WRR } */

/* RR, and POK_NEEDS_SCHED_RR is not necessary */
#define POK_NEEDS_SCHED_GTRR
#define POK_CONFIG_PARTITIONS_SCHEDULER                                        \
  { POK_SCHED_GLOBAL_TIMESLICE }

#define POK_CONFIG_PARTITIONS_SIZE                                             \
  { 120000 }

#define POK_CONFIG_PROCESSOR_AFFINITY                                          \
  { 1 }

#define POK_NEEDS_THREAD_SLEEP 1

/*  The maccro POK_CONFIG_PARTTITIONS_SIZE indicates the required amount of  */
/*  memory for each partition.This value was deduced from the property  */
/*  POK::Needed_Memory_Size of each process */

#define POK_NEEDS_DEBUG 1
// #define POK_NEEDS_VERBOSE_DEBUG 1

#define POK_CONFIG_SCHEDULING_SLOTS                                            \
  { 10000000000 }

#define POK_CONFIG_SCHEDULING_SLOTS_ALLOCATION                                 \
  { 0 }

#define POK_CONFIG_SCHEDULING_NBSLOTS 1

#define POK_CONFIG_SCHEDULING_MAJOR_FRAME 10000000000

// Seems not used
// #define POK_CONFIG_STACKS_SIZE 60000
// #define POK_CONFIG_NB_BUSES 0

typedef enum { invalid_bus = 0 } pok_bus_identifier_t;

#endif // __POK_KERNEL_GENERATED_DEPLOYMENT_H_
